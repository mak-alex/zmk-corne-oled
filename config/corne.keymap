#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;  // Время ожидания для Home Row Mods (200 мс)
    quick-tap-ms = <150>;     // Ускоряет определение TAP
    flavor = "balanced";      // Оптимальный режим
};

&lt {
    quick-tap-ms = <150>;
    flavor = "balanced";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E      &kp R  &kp T          &kp Y        &kp U            &kp I      &kp O    &kp P     &trans
&kp LSHFT     &kp A  &kp S  &kp D      &kp F  &kp G          &kp H        &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&mt LGUI ESC  &kp Z  &kp X  &kp C      &kp V  &kp B          &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_GUI ESC
                            &kp LCTRL  &mo 1  &lt 2 SPACE    &lt 3 ENTER  &lt 5 BACKSPACE  &kp RALT
            >;
        };

        nav_num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                  &kp N6         &kp N7             &kp N8              &kp N9          &kp N0      &mo 4
&trans   &trans  &trans  &trans    &trans  &kp LS(LG(NUMBER_4))    &kp LEFT       &kp DOWN           &kp UP              &kp RIGHT       &caps_word  &trans
&trans   &trans  &trans  &trans    &trans  &kp DEL                 &mt LALT LEFT  &mt LG(END) PG_DN  &mt LG(HOME) PG_UP  &mt LALT RIGHT  &trans      &trans
                         &kp LGUI  &trans  &kp SPACE               &mo 4          &trans             &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2    &kp F3    &kp F4     &kp F5     &kp F6    &kp F7  &kp F8        &kp F9            &kp F10       &kp F11  &kp F12
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &trans        &kp K_PLAY_PAUSE  &trans        &trans   &trans
                            &trans     &kp SPACE  &trans    &trans  &trans        &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT            &kp HASH    &kp DLLR      &kp PRCNT       &kp CARET       &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR              &trans
&trans  &trans           &kp K_PLAY_PAUSE  &kp K_MUTE  &kp C_VOL_UP  &kp C_VOL_DN    &kp MINUS       &kp EQUAL  &kp LBRC   &kp RBRC  &kp PIPE              &kp GRAVE
&trans  &trans           &trans            &trans      &trans        &trans          &kp UNDERSCORE  &kp PLUS   &kp LBKT   &kp RBKT  &kp NON_US_BACKSLASH  &kp TILDE
                                           &trans      &trans        &trans          &trans          &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn_set {
            if-layers = <3>;
            then-layer = <4>;
        };
    };
};
