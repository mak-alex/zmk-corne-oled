/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HM_A MT(MOD_LCTL, A)   // A = LCTRL при удержании
#define HM_S MT(MOD_LALT, S)   // S = LALT при удержании
#define HM_D MT(MOD_LGUI, D)   // D = LGUI (WIN/CMD) при удержании
#define HM_F MT(MOD_LSFT, F)   // F = LSHIFT при удержании

#define HM_G MT(MOD_RSFT, G)   // G = RSHIFT при удержании
#define HM_H MT(MOD_RGUI, H)   // H = RGUI (WIN/CMD) при удержании
#define HM_J MT(MOD_RALT, J)   // J = RALT при удержании
#define HM_K MT(MOD_RCTL, K)   // K = RCTRL при удержании

/ {
    macros {
        switch_layout: switch_layout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&macro_wait_time 100>, <&kp RCTRL>;

            label = "SWITCH_LAYOUT";
        };

        osm_lctl_lalt: osm_lctl_lalt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&os LCTRL>, <&os LALT>;
            label = "OSM_LCTL_LALT";
        };

        osm_lalt_lgui: osm_lalt_lgui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&os LALT>, <&os LGUI>;
            label = "OSM_LALT_LGUI";
        };

        osm_lctl_lalt_lgui: osm_lctl_lalt_lgui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&os LCTL>, <&os LALT>, <&os LGUI>;
            label = "OSM_LCTL_LALT_LGUI";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LGUI(4))>;  // LSHIFT + LGUI + 4
            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp E     &kp R      &kp T          &kp Y        &kp U            &kp I      &kp O    &kp P     &switch_layout
&kp LSHFT      HM_A   HM_S   HM_D      HM_F       HM_G           HM_H         HM_J             HM_K       &kp L    &kp SEMI  &kp SQT
&mt LGUI ESC  &kp Z  &kp X  &kp C     &kp V      &kp B          &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_GUI ESC
                             &kp LCTRL  &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER  &lt 5 BACKSPACE  &kp RALT
            >;
        };

        nav_num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&osm_lalt_lgui  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                  &kp N6         &kp N7             &kp N8              &kp N9          &kp N0      &mo 4
&osm_lctl_lalt   &trans  &trans  &trans    &trans  &kp &screenshot    &kp LEFT       &kp DOWN           &kp UP              &kp RIGHT       &caps_word  &trans
&osm_lctl_lalt_lgui   &trans  &trans  &trans    &trans  &kp DEL                 &mt LALT LEFT  &mt LG(END) PG_DN  &mt LG(HOME) PG_UP  &mt LALT RIGHT  &trans      &trans
                         &kp LGUI  &trans  &kp SPACE               &mo 4          &trans             &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans  &trans            &trans      &trans        &trans          &trans          &trans     &trans    &trans    &trans                &trans
&trans  &trans  &kp K_PLAY_PAUSE  &kp K_MUTE  &kp C_VOL_UP  &kp C_VOL_DN    &kp MINUS       &kp EQUAL  &kp LBRC  &kp RBRC  &kp PIPE              &kp GRAVE
&trans  &trans  &trans            &trans      &trans        &trans          &kp UNDERSCORE  &kp PLUS   &kp LBKT  &kp RBKT  &kp NON_US_BACKSLASH  &kp TILDE
                                  &trans      &trans        &trans          &trans          &trans     &trans
            >;
        };
    };
};
